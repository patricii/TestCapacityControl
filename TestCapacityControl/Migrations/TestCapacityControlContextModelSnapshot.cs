// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestCapacityControl.Models;

namespace TestCapacityControl.Migrations
{
    [DbContext(typeof(TestCapacityControlContext))]
    partial class TestCapacityControlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TestCapacityControl.Models.CMW500", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comments");

                    b.Property<string>("Group");

                    b.Property<int>("Id_Flex");

                    b.Property<int>("Id_Motorola");

                    b.Property<int>("KB036_6GHz");

                    b.Property<int>("KM011_QC_CAL");

                    b.Property<int>("KM550_LTE_TDD");

                    b.Property<int>("KM800_CDMA");

                    b.Property<int>("KV113_MTK_CAL");

                    b.Property<int>("KV120_Unisoc");

                    b.Property<string>("Last_Station");

                    b.Property<int>("SerialNumber");

                    b.Property<string>("Site");

                    b.Property<string>("Type");

                    b.Property<DateTime>("Updated");

                    b.Property<int>("WiFi_KM650_KM610");

                    b.HasKey("Id");

                    b.ToTable("CMW500");
                });

            modelBuilder.Entity("TestCapacityControl.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("JobTitle");

                    b.Property<string>("Name");

                    b.Property<string>("Scope");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TestCapacityControl.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Model");

                    b.Property<string>("ProductName");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("TestCapacityControl.Models.ProductSetup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Freq6Ghz");

                    b.Property<string>("License");

                    b.Property<string>("PSAUX");

                    b.Property<string>("PowerSupply");

                    b.Property<string>("Product");

                    b.Property<string>("TDD");

                    b.Property<string>("TestSets");

                    b.HasKey("Id");

                    b.ToTable("ProductSetup");
                });

            modelBuilder.Entity("TestCapacityControl.Models.ProductsTABLET", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Model");

                    b.Property<string>("ProductName");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("ProductsTABLET");
                });
          
            modelBuilder.Entity("TestCapacityControl.Models.TestProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("JOT");

                    b.Property<string>("JOT_Slim");

                    b.Property<string>("L2");

                    b.Property<string>("M2");

                    b.Property<string>("Technology");

                    b.Property<string>("WUHAN_JOT");

                    b.Property<string>("WUHAN_JOT_Slim");

                    b.Property<string>("WUHAN_L2");

                    b.HasKey("Id");

                    b.ToTable("TestProcess");
                });

#pragma warning restore 612, 618
        }
    }
}
